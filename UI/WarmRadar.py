# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'QtDesignerFiles/WarmRadar.ui'
#
# Created by: PyQt5 UI code generator 5.15.5
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import os

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog, QPushButton

from Data.ControllerParams import ControllerParams
from Data.DataHadler import DataHandler
from UI.Loading import UI_LoadingWindow
from UI.MaterialsChoice import Ui_MaterialsChoice
from UI.PointWarmChoice import Ui_PointWarmChoice
from UI.FunctionChoice import UI_FunctionChoice


class Ui_WarmRadar(object):

    def setupController(self, Controller):
        self.Controller = Controller

    def setupUi(self, WarmRadar):
        self.window = WarmRadar
        WarmRadar.setObjectName("WarmRadar")
        WarmRadar.resize(1398, 740)

        self.centralwidget = QtWidgets.QWidget(WarmRadar)
        self.centralwidget.setObjectName("centralwidget")

            # Создаем layout
        layout = QtWidgets.QVBoxLayout(self.centralwidget)
        layout.setContentsMargins(0, 0, 0, 0)  # Убираем отступы, если нужно
        layout.setAlignment(QtCore.Qt.AlignCenter)  # Устанавливаем выравнивание по центру

            # Создаем globalGroupBox
        self.globalGroupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.globalGroupBox.setFixedSize(750, 690)  # Устанавливаем фиксированные размеры
        self.globalGroupBox.setStyleSheet("#globalGroupBox {"
                                              "    border: 2px solid black;"
                                              "    border-radius: 100px;"
                                              "    background-color: white;"
                                              "}")
        self.globalGroupBox.setTitle("")
        self.globalGroupBox.setAlignment(QtCore.Qt.AlignCenter)
        self.globalGroupBox.setObjectName("globalGroupBox")

            # Добавляем globalGroupBox в layout
        layout.addWidget(self.globalGroupBox)

        WarmRadar.setCentralWidget(self.centralwidget)

        self.widget_2 = QtWidgets.QWidget(self.globalGroupBox)

        self.widget_2.setGeometry(QtCore.QRect(60, 10, 631, 651))

        self.widget_2.setMinimumSize(QtCore.QSize(631, 0))

        self.widget_2.setStyleSheet("  overflow: visible;   ")

        self.widget_2.setObjectName("widget_2")

        self.gridLayout_3 = QtWidgets.QGridLayout(self.widget_2)

        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)

        self.gridLayout_3.setObjectName("gridLayout_3")

        self.gridLayout = QtWidgets.QGridLayout()

        self.gridLayout.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)

        self.gridLayout.setHorizontalSpacing(0)

        self.gridLayout.setObjectName("gridLayout")

        self.radioButton_3 = QtWidgets.QRadioButton(self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radioButton_3.sizePolicy().hasHeightForWidth())

        self.radioButton_3.setSizePolicy(sizePolicy)

        self.radioButton_3.setLayoutDirection(QtCore.Qt.LeftToRight)

        self.radioButton_3.setStyleSheet("QRadioButton {\n"
"\n"
"}\n"
"\n"
"QRadioButton::indicator {\n"
"    width: 25px; /* Увеличенный размер индикатора (кружка) */\n"
"    height: 25px; /* Увеличенный размер индикатора (кружка) */\n"
"    border: 2px solid blue; /* Синяя обводка */\n"
"    border-radius: 13px; /* Закругленный индикатор */\n"
"    background-color: white; /* Цвет фона кружка */\n"
"}\n"
"\n"
"QRadioButton::indicator::checked {\n"
"    background-color: blue; /* Синий фон для выбранного состояния */\n"
"    border: 2px solid blue; /* Синяя обводка в выбранном состоянии */\n"
"}\n"
"")

        self.radioButton_3.setText("")

        self.radioButton_3.setAutoRepeatDelay(290)

        self.radioButton_3.setObjectName("radioButton_3")

        self.gridLayout.addWidget(self.radioButton_3, 0, 0, 1, 1)

        self.radioButton_2 = QtWidgets.QRadioButton(self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radioButton_2.sizePolicy().hasHeightForWidth())

        self.radioButton_2.setSizePolicy(sizePolicy)

        self.radioButton_2.setStyleSheet("QRadioButton {\n"
"\n"
"}\n"
"\n"
"QRadioButton::indicator {\n"
"    width: 25px; /* Увеличенный размер индикатора (кружка) */\n"
"    height: 25px; /* Увеличенный размер индикатора (кружка) */\n"
"    border: 2px solid blue; /* Синяя обводка */\n"
"    border-radius: 13px; /* Закругленный индикатор */\n"
"    background-color: white; /* Цвет фона кружка */\n"
"}\n"
"\n"
"QRadioButton::indicator::checked {\n"
"    background-color: blue; /* Синий фон для выбранного состояния */\n"
"    border: 2px solid blue; /* Синяя обводка в выбранном состоянии */\n"
"}\n"
"")

        self.radioButton_2.setText("")

        self.radioButton_2.setAutoRepeatDelay(290)

        self.radioButton_2.setObjectName("radioButton_2")

        self.gridLayout.addWidget(self.radioButton_2, 1, 0, 1, 1)

        self.label = QtWidgets.QLabel(self.widget_2)

        self.label.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())

        self.label.setSizePolicy(sizePolicy)

        self.label.setStyleSheet("QLabel {\n"
"    color: black;              /* Черный цвет текста */\n"
"    font-size: 16px;           /* Увеличенный размер текста */\n"
"    font-weight: normal;       /* Обычный шрифт (не жирный) */\n"
"    margin-left: 10px;\n"
"outline: none; \n"
"border: 0px;\n"
"}\n"
"")

        self.label.setFrameShadow(QtWidgets.QFrame.Sunken)

        self.label.setLineWidth(0)

        self.label.setAlignment(QtCore.Qt.AlignCenter)

        self.label.setObjectName("label")

        self.gridLayout.addWidget(self.label, 1, 1, 1, 1)

        self.exportButton = QtWidgets.QPushButton(self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.exportButton.sizePolicy().hasHeightForWidth())

        self.exportButton.setSizePolicy(sizePolicy)

        self.exportButton.setStyleSheet("#exportButton {\n"
"    background-color: blue;    /* Синий фон кнопки */\n"
"    color: white;              /* Белый цвет текста */\n"
"    font-size: 16px;           /* Увеличенный размер текста */\n"
"    border-radius: 10px;       /* Закругление краев */\n"
"    padding: 10px 20px;    \n"
"    margin-left: 10px;\n"
"}\n"
"\n"
"QPushButton::indicator {\n"
"    width: 25px;               /* Увеличенный размер кружка */\n"
"    height: 25px;              /* Увеличенный размер кружка */\n"
"    border: 3px solid white;   /* Белая обводка кружка */\n"
"    background-color: blue;    /* Синий цвет кружка */\n"
"    border-radius: 12px;       /* Закругление кружка */\n"
"}\n"
"\n"
"QPushButton::indicator::checked {\n"
"    background-color: white;   /* Белый фон для выбранного состояния */\n"
"    border: 3px solid blue;    /* Синяя обводка выбранного кружка */\n"
"}\n"
"")

        self.exportButton.setObjectName("exportButton")

        self.gridLayout.addWidget(self.exportButton, 0, 1, 1, 1)

        self.gridLayout_3.addLayout(self.gridLayout, 3, 0, 1, 1)

        self.widget = QtWidgets.QWidget(self.widget_2)

        self.widget.setStyleSheet("border: 1px solid black; margin-top:8px;")

        self.widget.setObjectName("widget")

        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.widget)

        self.horizontalLayout_7.setSpacing(0)

        self.horizontalLayout_7.setObjectName("horizontalLayout_7")

        self.radiusL = QtWidgets.QLabel(self.widget)

        self.radiusL.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radiusL.sizePolicy().hasHeightForWidth())

        self.radiusL.setSizePolicy(sizePolicy)

        self.radiusL.setStyleSheet("QLabel {\n"
"    color: black;              /* Черный цвет текста */\n"
"    font-size: 16px;           /* Увеличенный размер текста */\n"
"    font-weight: normal;       /* Обычный шрифт (не жирный) */\n"
"    margin-left: 10px;\n"
"outline: none; \n"
"border: 0px;\n"
"}\n"
"")

        self.radiusL.setFrameShadow(QtWidgets.QFrame.Sunken)

        self.radiusL.setLineWidth(0)

        self.radiusL.setAlignment(QtCore.Qt.AlignCenter)

        self.radiusL.setObjectName("label_11")

        self.horizontalLayout_7.addWidget(self.radiusL)

        self.radius = QtWidgets.QDoubleSpinBox(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radius.sizePolicy().hasHeightForWidth())

        self.radius.setSizePolicy(sizePolicy)

        self.radius.setObjectName("doubleSpinBox_8")

        self.horizontalLayout_7.addWidget(self.radius)

        self.gridLayout_3.addWidget(self.widget, 5, 2, 1, 1)

        self.widget1 = QtWidgets.QWidget(self.widget_2)

        self.widget1.setStyleSheet("border: 1px solid black; margin-top:8px;")

        self.widget1.setObjectName("widget1")

        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.widget1)

        self.horizontalLayout_5.setContentsMargins(1, 1, -1, -1)

        self.horizontalLayout_5.setSpacing(9)

        self.horizontalLayout_5.setObjectName("horizontalLayout_5")

        self.heightL = QtWidgets.QLabel(self.widget1)

        self.heightL.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.heightL.sizePolicy().hasHeightForWidth())

        self.heightL.setSizePolicy(sizePolicy)

        self.heightL.setStyleSheet("QLabel {\n"
"    color: black;              /* Черный цвет текста */\n"
"    font-size: 16px;           /* Увеличенный размер текста */\n"
"    font-weight: normal;       /* Обычный шрифт (не жирный) */\n"
"outline: none; \n"
"margin-left: 1px;\n"
"border: 0px;\n"
"}\n"
"")

        self.heightL.setFrameShadow(QtWidgets.QFrame.Sunken)

        self.heightL.setLineWidth(0)

        self.heightL.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignTop)

        self.heightL.setWordWrap(False)

        self.heightL.setObjectName("label_9")

        self.horizontalLayout_5.addWidget(self.heightL)

        self.height = QtWidgets.QDoubleSpinBox(self.widget1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.height.sizePolicy().hasHeightForWidth())

        self.height.setSizePolicy(sizePolicy)

        self.height.setStyleSheet("\n"
"")

        self.height.setObjectName("doubleSpinBox_6")

        self.horizontalLayout_5.addWidget(self.height)

        self.gridLayout_3.addWidget(self.widget1, 5, 0, 1, 1)

        self.widget2 = QtWidgets.QWidget(self.widget_2)

        self.widget2.setStyleSheet("border: 1px solid black; margin-top:8px;")

        self.widget2.setObjectName("widget2")

        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.widget2)

        self.horizontalLayout_4.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)

        self.horizontalLayout_4.setObjectName("horizontalLayout_4")

        self.pressureL = QtWidgets.QLabel(self.widget2)

        self.pressureL.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pressureL.sizePolicy().hasHeightForWidth())

        self.pressureL.setSizePolicy(sizePolicy)

        self.pressureL.setStyleSheet("QLabel {\n"
"    color: black;              /* Черный цвет текста */\n"
"    font-size: 16px;           /* Увеличенный размер текста */\n"
"    font-weight: normal;       /* Обычный шрифт (не жирный) */\n"
"    margin-left: 10px;\n"
"outline: none; \n"
"border: 0px;\n"
"}\n"
"")

        self.pressureL.setFrameShadow(QtWidgets.QFrame.Sunken)

        self.pressureL.setLineWidth(0)

        self.pressureL.setAlignment(QtCore.Qt.AlignCenter)

        self.pressureL.setObjectName("label_8")

        self.horizontalLayout_4.addWidget(self.pressureL)

        self.pressure = QtWidgets.QDoubleSpinBox(self.widget2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pressure.sizePolicy().hasHeightForWidth())

        self.pressure.setSizePolicy(sizePolicy)

        self.pressure.setObjectName("doubleSpinBox_5")

        self.horizontalLayout_4.addWidget(self.pressure)

        self.gridLayout_3.addWidget(self.widget2, 9, 0, 1, 1)

        self.widget3 = QtWidgets.QWidget(self.widget_2)

        self.widget3.setStyleSheet("border: 1px solid black; margin-top:8px;")

        self.widget3.setObjectName("widget3")

        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.widget3)

        self.horizontalLayout_6.setSpacing(0)

        self.horizontalLayout_6.setObjectName("horizontalLayout_6")

        self.timeL = QtWidgets.QLabel(self.widget3)

        self.timeL.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.timeL.sizePolicy().hasHeightForWidth())

        self.timeL.setSizePolicy(sizePolicy)

        self.timeL.setStyleSheet("QLabel {\n"
"    color: black;              /* Черный цвет текста */\n"
"    font-size: 16px;           /* Увеличенный размер текста */\n"
"    font-weight: normal;       /* Обычный шрифт (не жирный) */\n"
"    margin-left: 10px;\n"
"outline: none; \n"
"border: 0px;\n"
"}\n"
"")

        self.timeL.setFrameShadow(QtWidgets.QFrame.Sunken)

        self.timeL.setLineWidth(0)

        self.timeL.setAlignment(QtCore.Qt.AlignCenter)

        self.timeL.setObjectName("label_10")

        self.horizontalLayout_6.addWidget(self.timeL)

        self.time = QtWidgets.QDoubleSpinBox(self.widget3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.time.sizePolicy().hasHeightForWidth())

        self.time.setSizePolicy(sizePolicy)

        self.time.setObjectName("doubleSpinBox_7")

        self.horizontalLayout_6.addWidget(self.time)

        self.gridLayout_3.addWidget(self.widget3, 9, 2, 1, 1)

        self.widget4 = QtWidgets.QWidget(self.widget_2)

        self.widget4.setStyleSheet("border: 1px solid black; margin-top:8px;")

        self.widget4.setObjectName("widget4")

        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.widget4)

        self.horizontalLayout_8.setObjectName("horizontalLayout_8")

        self.time_stepsL = QtWidgets.QLabel(self.widget4)

        self.time_stepsL.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.time_stepsL.sizePolicy().hasHeightForWidth())

        self.time_stepsL.setSizePolicy(sizePolicy)

        self.time_stepsL.setStyleSheet("QLabel {\n"
"    color: black;              /* Черный цвет текста */\n"
"    font-size: 16px;           /* Увеличенный размер текста */\n"
"    font-weight: normal;       /* Обычный шрифт (не жирный) */\n"
"    margin-left: 10px;\n"
"outline: none; \n"
"border: 0px;\n"
"}\n"
"")

        self.time_stepsL.setFrameShadow(QtWidgets.QFrame.Sunken)

        self.time_stepsL.setLineWidth(0)

        self.time_stepsL.setAlignment(QtCore.Qt.AlignCenter)

        self.time_stepsL.setObjectName("label_12")

        self.horizontalLayout_8.addWidget(self.time_stepsL)

        self.time_steps = QtWidgets.QSpinBox(self.widget4)

        self.time_steps.setStyleSheet("margin-right:5px;")
        self.time_steps.setMaximum(999)
        self.time_steps.setObjectName("spinBox")

        self.horizontalLayout_8.addWidget(self.time_steps)

        self.gridLayout_3.addWidget(self.widget4, 11, 0, 1, 1)

        self.label_5 = QtWidgets.QLabel(self.widget_2)

        self.label_5.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_5.sizePolicy().hasHeightForWidth())

        self.label_5.setSizePolicy(sizePolicy)

        self.label_5.setStyleSheet("QLabel {\n"
"    color: black;              /* Черный цвет текста */\n"
"    font-size: 16px;           /* Увеличенный размер текста */\n"
"    font-weight: normal;       /* Обычный шрифт (не жирный) */\n"
"outline: none; \n"
"border: 0px;\n"
"margin-top:8px;\n"
"}\n"
"")

        self.label_5.setFrameShadow(QtWidgets.QFrame.Sunken)

        self.label_5.setLineWidth(0)

        self.label_5.setAlignment(QtCore.Qt.AlignCenter)

        self.label_5.setObjectName("label_5")

        self.gridLayout_3.addWidget(self.label_5, 8, 0, 1, 2)

        self.line = QtWidgets.QFrame(self.widget_2)

        self.line.setFrameShape(QtWidgets.QFrame.HLine)

        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)

        self.line.setObjectName("line")

        self.gridLayout_3.addWidget(self.line, 1, 0, 1, 3)

        self.functionWarmButton = QtWidgets.QPushButton(self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.functionWarmButton.sizePolicy().hasHeightForWidth())

        self.functionWarmButton.setSizePolicy(sizePolicy)

        self.functionWarmButton.setStyleSheet("#functionWarmButton {\n"
"    background-color: blue;    /* Синий фон кнопки */\n"
"    color: white;              /* Белый цвет текста */\n"
"    font-size: 16px;           /* Увеличенный размер текста */\n"
"    border-radius: 10px;       /* Закругление краев */\n"
"    padding: 10px 20px;        /* Отступы */\n"
"margin-top:8px;\n"
"}\n"
"\n"
"#functionWarmButton::indicator {\n"
"    width: 25px;               /* Увеличенный размер кружка */\n"
"    height: 25px;              /* Увеличенный размер кружка */\n"
"    border: 3px solid white;   /* Белая обводка кружка */\n"
"    background-color: blue;    /* Синий цвет кружка */\n"
"    border-radius: 12px;       /* Закругление кружка */\n"
"}\n"
"\n"
"#functionWarmButton::indicator::checked {\n"
"    background-color: white;   /* Белый фон для выбранного состояния */\n"
"    border: 3px solid blue;    /* Синяя обводка выбранного кружка */\n"
"}\n"
"")

        self.functionWarmButton.setObjectName("functionWarmButton")

        self.gridLayout_3.addWidget(self.functionWarmButton, 10, 0, 1, 2)

        self.label_2 = QtWidgets.QLabel(self.widget_2)

        self.label_2.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())

        self.label_2.setSizePolicy(sizePolicy)

        self.label_2.setStyleSheet("QLabel {\n"
"    color: black;              /* Черный цвет текста */\n"
"    font-size: 16px;           /* Увеличенный размер текста */\n"
"    font-weight: normal;       /* Обычный шрифт (не жирный) */\n"
"outline: none; \n"
"border: 0px;\n"
"margin-top:8px;\n"
"}\n"
"")

        self.label_2.setFrameShadow(QtWidgets.QFrame.Sunken)

        self.label_2.setLineWidth(0)

        self.label_2.setAlignment(QtCore.Qt.AlignCenter)

        self.label_2.setObjectName("label_2")

        self.gridLayout_3.addWidget(self.label_2, 4, 0, 1, 2)

        self.pointWarmButton = QtWidgets.QPushButton(self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pointWarmButton.sizePolicy().hasHeightForWidth())

        self.pointWarmButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(-1)

        self.pointWarmButton.setFont(font)

        self.pointWarmButton.setStyleSheet("#pointWarmButton {\n"
"    background-color: blue;    /* Синий фон кнопки */\n"
"    color: white;              /* Белый цвет текста */\n"
"    font-size: 16px;           /* Увеличенный размер текста */\n"
"    border-radius: 10px;       /* Закругление краев */\n"
"    padding: 10px 30px;        /* Отступы */\n"
"margin-top:8px;\n"
"}\n"
"\n"
"#pointWarmButton::indicator {\n"
"    width: 25px;               /* Увеличенный размер кружка */\n"
"    height: 25px;              /* Увеличенный размер кружка */\n"
"    border: 3px solid white;   /* Белая обводка кружка */\n"
"    background-color: blue;    /* Синий цвет кружка */\n"
"    border-radius: 12px;       /* Закругление кружка */\n"
"}\n"
"\n"
"#pointWarmButton::indicator::checked {\n"
"    background-color: white;   /* Белый фон для выбранного состояния */\n"
"    border: 3px solid blue;    /* Синяя обводка выбранного кружка */\n"
"}\n"
"")

        self.pointWarmButton.setObjectName("pointWarmButton")

        self.gridLayout_3.addWidget(self.pointWarmButton, 10, 2, 1, 1)

        self.label_19 = QtWidgets.QLabel(self.widget_2)

        self.label_19.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_19.sizePolicy().hasHeightForWidth())

        self.label_19.setSizePolicy(sizePolicy)

        self.label_19.setStyleSheet("QLabel {\n"
"    color: black;              /* Черный цвет текста */\n"
"    font-size: 16px;           /* Увеличенный размер текста */\n"
"    font-weight: normal;       /* Обычный шрифт (не жирный) */\n"
"outline: none; \n"
"border: 0px;\n"
"margin-left: 54px;\n"
"}\n"
"")

        self.label_19.setFrameShadow(QtWidgets.QFrame.Sunken)

        self.label_19.setLineWidth(0)

        self.label_19.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)

        self.label_19.setObjectName("label_19")

        self.gridLayout_3.addWidget(self.label_19, 0, 1, 1, 1)

        self.widget5 = QtWidgets.QWidget(self.widget_2)

        self.widget5.setStyleSheet("border: 1px solid black; margin-top:8px;")

        self.widget5.setObjectName("widget5")

        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.widget5)

        self.horizontalLayout_2.setSpacing(0)

        self.horizontalLayout_2.setObjectName("horizontalLayout_2")

        self.grid_size = QtWidgets.QLabel(self.widget5)

        self.grid_size.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.grid_size.sizePolicy().hasHeightForWidth())

        self.grid_size.setSizePolicy(sizePolicy)

        self.grid_size.setStyleSheet("QLabel {\n"
"    color: black;              /* Черный цвет текста */\n"
"    font-size: 16px;           /* Увеличенный размер текста */\n"
"    font-weight: normal;       /* Обычный шрифт (не жирный) */\n"
"    margin-left: 10px;\n"
"outline: none; \n"
"border: 0px;\n"
"}\n"
"")

        self.grid_size.setFrameShadow(QtWidgets.QFrame.Sunken)

        self.grid_size.setLineWidth(0)

        self.grid_size.setAlignment(QtCore.Qt.AlignCenter)

        self.grid_size.setObjectName("label_6")

        self.horizontalLayout_2.addWidget(self.grid_size)

        self.R = QtWidgets.QSpinBox(self.widget5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.R.sizePolicy().hasHeightForWidth())

        self.R.setSizePolicy(sizePolicy)

        self.R.setObjectName("spinBox_2")

        self.horizontalLayout_2.addWidget(self.R)

        self.Z = QtWidgets.QSpinBox(self.widget5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Z.sizePolicy().hasHeightForWidth())

        self.Z.setSizePolicy(sizePolicy)

        self.Z.setObjectName("spinBox_4")

        self.horizontalLayout_2.addWidget(self.Z)

        self.Fi = QtWidgets.QSpinBox(self.widget5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Fi.sizePolicy().hasHeightForWidth())

        self.Fi.setSizePolicy(sizePolicy)

        self.Fi.setObjectName("spinBox_3")

        self.horizontalLayout_2.addWidget(self.Fi)

        self.gridLayout_3.addWidget(self.widget5, 12, 0, 1, 3)

        self.layersMaterialButton = QtWidgets.QPushButton(self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.layersMaterialButton.sizePolicy().hasHeightForWidth())

        self.layersMaterialButton.setSizePolicy(sizePolicy)

        self.layersMaterialButton.setStyleSheet("#layersMaterialButton {\n"
"    background-color: blue;    /* Синий фон кнопки */\n"
"    color: white;              /* Белый цвет текста */\n"
"    font-size: 16px;           /* Увеличенный размер текста */\n"
"    border-radius: 10px;       /* Закругление краев */\n"
"    padding: 10px 20px;        /* Отступы */\n"
"margin-top:8px;\n"
"}\n"
"\n"
"#layersMaterialButton::indicator {\n"
"    width: 25px;               /* Увеличенный размер кружка */\n"
"    height: 25px;              /* Увеличенный размер кружка */\n"
"    border: 3px solid white;   /* Белая обводка кружка */\n"
"    background-color: blue;    /* Синий цвет кружка */\n"
"    border-radius: 12px;       /* Закругление кружка */\n"
"}\n"
"\n"
"#layersMaterialButton::indicator::checked {\n"
"    background-color: white;   /* Белый фон для выбранного состояния */\n"
"    border: 3px solid blue;    /* Синяя обводка выбранного кружка */\n"
"}\n"
" ")

        self.layersMaterialButton.setObjectName("layersMaterialButton")

        self.gridLayout_3.addWidget(self.layersMaterialButton, 6, 1, 1, 1)

        self.startModel = QtWidgets.QPushButton(self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.startModel.sizePolicy().hasHeightForWidth())

        self.startModel.setSizePolicy(sizePolicy)

        self.startModel.setStyleSheet("#startModel {\n"
"    background-color: blue;    /* Синий фон кнопки */\n"
"    color: white;              /* Белый цвет текста */\n"
"    font-size: 16px;           /* Увеличенный размер текста */\n"
"    border-radius: 10px;       /* Закругление краев */\n"
"    padding: 10px 15px;     /* Отступы */\n"
"margin-top:8px;\n"
"}\n"
"\n"
".parent {\n"
"    overflow: visible;         /* Убедитесь, что элементы не обрезаются */\n"
"}\n"
"\n"
"#startModel::indicator {\n"
"    width: 25px;               /* Увеличенный размер кружка */\n"
"    height: 25px;              /* Увеличенный размер кружка */\n"
"    border: 3px solid white;   /* Белая обводка кружка */\n"
"    background-color: blue;    /* Синий цвет кружка */\n"
"    border-radius: 12px;       /* Закругление кружка */\n"
"}\n"
"\n"
"#startModel::indicator::checked {\n"
"    background-color: white;   /* Белый фон для выбранного состояния */\n"
"    border: 3px solid blue;    /* Синяя обводка выбранного кружка */\n"
"}\n"
"")

        self.startModel.setObjectName("startModel")

        self.gridLayout_3.addWidget(self.startModel, 14, 1, 1, 2)

        WarmRadar.setCentralWidget(self.centralwidget)

        self.menubar = QtWidgets.QMenuBar(WarmRadar)

        self.menubar.setGeometry(QtCore.QRect(0, 0, 1398, 26))

        self.menubar.setObjectName("menubar")

        WarmRadar.setMenuBar(self.menubar)

        self.statusbar = QtWidgets.QStatusBar(WarmRadar)

        self.statusbar.setObjectName("statusbar")

        WarmRadar.setStatusBar(self.statusbar)

        self.radioButton_2.toggled.connect(self.updateControls)
        self.radioButton_3.toggled.connect(self.updateControls)

        # Привязка изменений параметров к объекту Controller
        self.height.valueChanged.connect(lambda val: setattr(self.Controller, 'height', val))
        self.radius.valueChanged.connect(lambda val: setattr(self.Controller, 'radius', val))
        self.pressure.valueChanged.connect(lambda val: setattr(self.Controller, 'thermal_diffusivity', val))
        self.time.valueChanged.connect(lambda val: setattr(self.Controller, 'time_delta', val))
        self.time_steps.valueChanged.connect(lambda val: setattr(self.Controller, 'time_steps', val))
        self.R.valueChanged.connect(lambda val: setattr(self.Controller, 'grid_size',
                                                        (val, self.Z.value(), self.Fi.value())))
        self.Z.valueChanged.connect(lambda val: setattr(self.Controller, 'grid_size',
                                                        (self.R.value(), val, self.Fi.value())))
        self.Fi.valueChanged.connect(lambda val: setattr(self.Controller, 'grid_size',
                                                         (self.R.value(), self.Z.value(), val)))

        self.retranslateUi(WarmRadar)
        QtCore.QMetaObject.connectSlotsByName(WarmRadar)

    def updateControls(self):
            # Если выбрана "Задать вручную"
            manual_selected = self.radioButton_2.isChecked()

            # Включить или отключить кнопки
            self.height.setEnabled(manual_selected)
            self.radius.setEnabled(manual_selected)
            self.pressure.setEnabled(manual_selected)
            self.time.setEnabled(manual_selected)
            self.time_steps.setEnabled(manual_selected)
            self.R.setEnabled(manual_selected)
            self.Z.setEnabled(manual_selected)
            self.Fi.setEnabled(manual_selected)
            self.layersMaterialButton.setEnabled(manual_selected)
            self.pointWarmButton.setEnabled(manual_selected)
            self.functionWarmButton.setEnabled(manual_selected)

            # Кнопка "Начать моделирование" всегда активна
            self.startModel.setEnabled(True)

    def openMaterialsChoice(self):
            self.materialsWindow = QtWidgets.QMainWindow()
            self.ui = Ui_MaterialsChoice()
            self.ui.setupController(self.Controller)  # Передача контроллера
            self.ui.setupUi(self.materialsWindow)
            self.materialsWindow.show()

    def openFunctionChoice(self):
            self.functionWindow = QtWidgets.QMainWindow()
            self.ui = UI_FunctionChoice()
            self.ui.setupController(self.Controller)  # Передача контроллера
            self.ui.setupUi(self.functionWindow)
            self.functionWindow.show()
            self.ui.center_window()

    def startSimulation(self):
            self.window.close()

            self.LoadingForm = QtWidgets.QWidget()
            self.ui = UI_LoadingWindow()
            self.ui.setupController(self.Controller)
            self.ui.setupUi(self.LoadingForm)
            self.LoadingForm.show()

    def choose_folder(self):
            current_dir = os.path.dirname(__file__)  # Папка, где находится Loading.py
            default_path = os.path.join(current_dir, "../Data/calculated_models")  # Укажите нужный путь
            folder = QFileDialog.getExistingDirectory(None, "Выберите папку", default_path)

            if folder:
                    print(f"Выбрана папка: {folder}")
                    parameters_file = os.path.join(folder, "model_parameters.json")

                    # Передаем WarmRadar в DataHandler
                    data_handler = DataHandler(folder, parameters_file)
                    parameters = data_handler.load_parameters()

                    # Теперь вы можете работать с объектом WarmRadar
                    self.radius.setValue(parameters["Cylinder"]["Radius"])
                    print(parameters)



    def openPointWarmChoice(self):
            self.pointWarmWindow = QtWidgets.QMainWindow()
            self.ui = Ui_PointWarmChoice()
            self.ui.setupController(self.Controller)  # Передача контроллера
            self.ui.setupUi(self.pointWarmWindow)
            self.pointWarmWindow.show()

    def retranslateUi(self, WarmRadar):
        _translate = QtCore.QCoreApplication.translate

        WarmRadar.setWindowTitle(_translate("WarmRadar", "WarmRadar"))

        self.label.setText(_translate("WarmRadar", "Задать вручную"))

        # Экспорт кнопка
        # Экспорт кнопка
        self.exportButton = QPushButton(WarmRadar)  # Используем WarmRadar как родитель
        self.exportButton.setText("Экспорт")
        self.exportButton.clicked.connect(self.choose_folder)

        self.radiusL.setText(_translate("WarmRadar", "Радиус:"))

        self.heightL.setText(_translate("WarmRadar", "Высота:"))

        self.pressureL.setText(_translate("WarmRadar", "Температуропроводность:"))

        self.timeL.setText(_translate("WarmRadar", "Временной шаг:"))

        self.time_stepsL.setText(_translate("WarmRadar", "Шагов по времени:"))

        self.label_5.setText(_translate("WarmRadar", "Параметры моделирования:"))

        self.functionWarmButton.setText(_translate("WarmRadar", "Установить функцию нагрева"))
        self.functionWarmButton.clicked.connect(self.openFunctionChoice)

        self.label_2.setText(_translate("WarmRadar", "Параметры реактора:"))

        self.pointWarmButton.setText(_translate("WarmRadar", "Точка подвода тепла"))
        self.pointWarmButton.clicked.connect(self.openPointWarmChoice)

        self.label_19.setText(_translate("WarmRadar", "Настройки"))

        self.grid_size.setText(_translate("WarmRadar", "Размерность сетки(R; Z; Ф): "))

        self.layersMaterialButton.setText(_translate("WarmRadar", "Задать слои сырья"))
        self.layersMaterialButton.clicked.connect(self.openMaterialsChoice)

        self.startModel.setText(_translate("WarmRadar", "Начать моделирование"))
        self.startModel.clicked.connect(self.startSimulation)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_WarmRadar()
    ui.setupController(ControllerParams())
    ui.setupUi(MainWindow)

    MainWindow.show()
    sys.exit(app.exec_())